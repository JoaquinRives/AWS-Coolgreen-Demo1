# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class AssetPropertyDouble(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, property_name: str=None, asset_id: str=None, integer_value: float=None):  # noqa: E501
        """AssetPropertyDouble - a model defined in Swagger

        :param property_name: The property_name of this AssetPropertyDouble.  # noqa: E501
        :type property_name: str
        :param asset_id: The asset_id of this AssetPropertyDouble.  # noqa: E501
        :type asset_id: str
        :param integer_value: The integer_value of this AssetPropertyDouble.  # noqa: E501
        :type integer_value: float
        """
        self.swagger_types = {
            'property_name': str,
            'asset_id': str,
            'integer_value': float
        }

        self.attribute_map = {
            'property_name': 'propertyName',
            'asset_id': 'assetId',
            'integer_value': 'integerValue'
        }
        self._property_name = property_name
        self._asset_id = asset_id
        self._integer_value = integer_value

    @classmethod
    def from_dict(cls, dikt) -> 'AssetPropertyDouble':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AssetPropertyDouble of this AssetPropertyDouble.  # noqa: E501
        :rtype: AssetPropertyDouble
        """
        return util.deserialize_model(dikt, cls)

    @property
    def property_name(self) -> str:
        """Gets the property_name of this AssetPropertyDouble.


        :return: The property_name of this AssetPropertyDouble.
        :rtype: str
        """
        return self._property_name

    @property_name.setter
    def property_name(self, property_name: str):
        """Sets the property_name of this AssetPropertyDouble.


        :param property_name: The property_name of this AssetPropertyDouble.
        :type property_name: str
        """

        self._property_name = property_name

    @property
    def asset_id(self) -> str:
        """Gets the asset_id of this AssetPropertyDouble.


        :return: The asset_id of this AssetPropertyDouble.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id: str):
        """Sets the asset_id of this AssetPropertyDouble.


        :param asset_id: The asset_id of this AssetPropertyDouble.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def integer_value(self) -> float:
        """Gets the integer_value of this AssetPropertyDouble.


        :return: The integer_value of this AssetPropertyDouble.
        :rtype: float
        """
        return self._integer_value

    @integer_value.setter
    def integer_value(self, integer_value: float):
        """Sets the integer_value of this AssetPropertyDouble.


        :param integer_value: The integer_value of this AssetPropertyDouble.
        :type integer_value: float
        """

        self._integer_value = integer_value
